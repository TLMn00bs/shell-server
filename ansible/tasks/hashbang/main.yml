- name: Install Administrator PGP keys
  block:
    - name: create temporary build directory
      ansible.builtin.tempfile:
        state: directory
      register: gnupghome
      check_mode: no
      changed_when: False
    - name: create root .ssh directory
      file:
        path: /root/.ssh
        state: directory
        mode: "0700"
    - name: create hashbang lib directory
      file: 
        path: /var/lib/hashbang
        state: directory
    - name: Copy administrator PGP keys
      shell:
        cmd: |
          export GNUPGHOME=$(mktemp -d)
          NEW_REPO=$(mktemp -d)
          cat > "${GNUPGHOME}/gpg.conf" << EOF
          # Never, ever, ever do this in your personal gpg.conf
          # However, this is sane when you know you use an empty GNUPGHOME
          keyring /var/lib/hashbang/admins.gpg
          trust-model always
          EOF

          git clone --recursive https://github.com/hashbang/keyring ${NEW_REPO}
          # If this doesn't match, nuke it
          if [ ! -f /var/lib/hashbang/admins.gpg ] || git -C ${NEW_REPO} verify-commit HEAD; then
            mv ${NEW_REPO} /var/lib/hashbang/keyring
          fi
    - name: Find copied admin keys
      find:
        paths: /var/lib/hashbang/keyring/admins
      register: admin_keys
    - name: Import admin keys into temporary keyring and add to root ssh authorized_keys
      shell: |
        gpg --homedir {{ gnupghome.path }} --import {{ item.path }}
        keyid=$(gpg --dry-run --with-colons --show-keys {{ item.path }} \
                | awk -F: '/^fpr:/ { print $10; exit; }')
        sshkey=$(gpg --homedir {{ gnupghome.path }} --export-ssh-key $keyid)
        if ! grep -q "$sshkey" /root/.ssh/authorized_keys; then
          echo "$sshkey" | tee -a /root/.ssh/authorized_keys
        fi
      with_items: "{{ admin_keys.files }}"
      changed_when: False  # temporary build directory
    - name: Export administrator pgp keys to combined keychain file
      shell: |
        gpg \
          --homedir {{ gnupghome.path }} \
          -q \
          --batch \
          --yes \
          --export \
          --export-options export-clean,export-minimal \
          -o /var/lib/hashbang/admins.gpg
      args:
        executable: /bin/bash
    - file:
        path: /var/lib/hashbang/admins.gpg
        mode: "0644"

    - name: Install trusted author PGP keys
      block:
      - file:
          path: /etc/ansible/keys/gnupg
          state: directory
          mode: 0700
      - shell: |
          GNUPGHOME=/etc/ansible/keys/gnupg \
          gpg --import /var/lib/hashbang/admins.gpg
        args:
          executable: /bin/bash

    - name: Install ansible-pull config
      copy:
        dest: /etc/ansible/ansible-pull.env
        content: |
          GIT_REPO=https://github.com/hashbang/shell-server.git
          GIT_BRANCH=master
          GIT_PATH=/etc/ansible/repos/shell-server
          PLAYBOOK_FILE=/etc/ansible/repos/shell-server/ansible/main.yml
          GNUPGHOME=/etc/ansible/keys/gnupg/
          ANSIBLE_LOCAL_TEMP=/root/.ansible/tmp
          ANSIBLE_REMOTE_TEMP=/root/.ansible/tmp

    - name: Install ansible-pull as systemd timer
      block:
      - copy:
          dest: /etc/systemd/system/ansible-pull.service
          content: |
            [Unit]
            Description=Run ansible-pull
            After=network.target

            [Service]
            EnvironmentFile=/etc/ansible/ansible-pull.env
            ExecStart=/bin/bash -c "/usr/bin/ansible-pull \
              -U $GIT_REPO \
              -C $GIT_BRANCH \
              -d $GIT_PATH \
              -c local \
              -i '%H,' \
              --verify-commit \
              $PLAYBOOK_FILE"
            Type=oneshot

            [Install]
            WantedBy=multi-user.target
      - copy:
          dest: /etc/systemd/system/ansible-pull.timer
          content: |
            [Unit]
            Description=Run ansible-pull every 15 mins

            [Timer]
            OnBootSec=15min
            OnUnitInactiveSec=15m

            [Install]
            WantedBy=timers.target
      - systemd:
          name: ansible-pull.timer
          state: started
          enabled: yes
          daemon_reload: yes
        ignore_errors: yes

- name: Install Welcome Templates and Man page
  block:
  - file:
      path: "/{{ item.path }}"
      state: directory
      mode: "0755"
    with_filetree: "tasks/hashbang/templates"
    when: item.state == 'directory'
  - template:
      src: "{{ item.src }}"
      dest: "/{{ item.path | regex_replace('.j2','') }}"
      mode: "{{ item.mode[1] == '7' and '0755' or '0644' }}"
    with_filetree: "tasks/hashbang/templates"
    when: item.state == 'file'

- name: Set welcome script executable
  file: dest=/etc/hashbang/welcome mode=a+x
